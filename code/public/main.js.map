{"version":3,"sources":["./src/app/components/error/error.component.ts","./src/app/components/error/error.component.html","./src/app/components/autocomplete/autocomplete.component.ts","./src/app/components/autocomplete/autocomplete.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/backend.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>error works!</p>\n","import { HttpParams } from '@angular/common/http';\nimport { ValueConverter } from '@angular/compiler/src/render3/view/template';\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Observable, of } from 'rxjs';\nimport { debounceTime, map, startWith, switchMap } from 'rxjs/operators';\nimport { BackendService } from 'src/app/services/backend.service';\n\n@Component({\n  selector: 'app-autocomplete',\n  templateUrl: './autocomplete.component.html',\n  styleUrls: ['./autocomplete.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AutocompleteComponent implements OnInit {\n  autoCompleteControl = new FormControl();\n  filteredOptions: Observable<any[]>;\n\n\n  constructor(private backendServ: BackendService) { }\n\n  ngOnInit(): void {\n    this.filteredOptions = this.autoCompleteControl.valueChanges.pipe(\n      startWith(null),\n      debounceTime(400),\n      switchMap(value => this.doFilter(value))\n    );\n  }\n\n  private doFilter(value: string) {\n    if (value !== null && value.length > 0) {\n      const params = new HttpParams().set('q', value);\n      return this.backendServ.getRecords(params).pipe(\n        map(response => response.records)\n      )\n    }\n    else {\n      return of([]);\n    }\n\n  }\n\n}\n","<form class=\"example-form\">\n    <mat-form-field class=\"example-full-width\">\n      <mat-label>Name</mat-label>\n      <input matInput\n             aria-label=\"Name\"\n             [matAutocomplete]=\"auto\"\n             [formControl]=\"autoCompleteControl\">\n      <mat-autocomplete #auto=\"matAutocomplete\">\n        <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option.first_name\">\n          <span>{{option.first_name}} {{option.last_name}} </span> |\n          <small>{{option.email}}</small>\n        </mat-option>\n      </mat-autocomplete>\n    </mat-form-field>\n    ","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ui';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AutocompleteComponent } from './components/autocomplete/autocomplete.component';\nimport { ErrorComponent } from './components/error/error.component';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete'\nimport {MatInputModule} from '@angular/material/input'\nimport {MatFormFieldModule} from '@angular/material/form-field'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AutocompleteComponent,\n    ErrorComponent\n  ],\n  exports: [\n    MatAutocompleteModule,\n    MatInputModule,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    MatAutocompleteModule,\n    MatFormFieldModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    MatInputModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BackendService {\n\n  API_URL = ''\n  //API_URL = 'http://localhost:3000'\n\n  constructor(private http: HttpClient) { }\n\n\n  getRecords(query) {\n    return this.http.get<any>(this.API_URL + '/api/getData', {params: query} ).pipe(tap(data =>  {\n      return data\n    }))\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AutocompleteComponent } from './components/autocomplete/autocomplete.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'autocomplete',\n    pathMatch: 'full'\n  },\n  {\n    path: 'autocomplete', component: AutocompleteComponent\n  },\n  {\n    path: '**' , redirectTo: 'autocomplete'\n  }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}